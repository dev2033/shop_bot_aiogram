import sqlite3

# def ensure_connection(func):
#     """ –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –°–£–ë–î: –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ,
#         –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –∑–∞ —Å–æ–±–æ–π —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.
#         –ü–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ!
#     """
#
#     def inner(*args, **kwargs):
#         with sqlite3.connect('database.db') as conn:
#             res = func(*args, conn=conn, **kwargs)
#         return res
#
#     return inner

_connection = None


def get_connection():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î"""
    global _connection
    if _connection is None:
        _connection = sqlite3.connect('database.db')
    return _connection


def init_db():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ –ë–î"""
    conn = get_connection()
    c = conn.cursor()
    c.execute(
        '''
            CREATE TABLE IF NOT EXISTS items (
                id              INTEGER PRIMARY KEY AUTOINCREMENT,
                name            TEXT, 
                description     TEXT, 
                price           INT, 
                data            TEXT,
                photo           TEXT
        )
        '''
    )

    c.execute(
        '''
            CREATE TABLE IF NOT EXISTS faq (
                about       TEXT 
            )
        '''
    )

    c.execute(
        '''
            CREATE TABLE IF NOT EXISTS qiwi (
                login       TEXT,
                token       TEXT
            )
        '''
    )
    # c.execute(
    #     '''
    #         INSERT INTO faq VALUES('üîò –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. –ò–∑–º–µ–Ω–∏—Ç–µ –µ—ë –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é')
    #     '''
    # )

    c.execute(
        '''
            CREATE TABLE IF NOT EXISTS buyers (
                users       TEXT,
                iditem      TEXT,
                comment     TEXT,
                amount      TEXT,
                receipt     TEXT,
                randomnum,
                data TEXT
            )
        '''
    )

    conn.commit()


def get_products():
    """–í—ã–≤–æ–¥–∏—Ç –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã"""
    conn = get_connection()
    c = conn.cursor()
    c.execute(
        '''
            SELECT * FROM items
        '''
    )
    rows = c.fetchall()
    msg = ''
    for row in rows:



get_products()


def add_data(name: str, description: str, price: int, data: str, photo_id: str):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ–≤–∞—Ä–µ"""
    conn = get_connection()
    c = conn.cursor()
    c.execute(
        '''
           INSERT INTO items 
           (name, description, price, data, photo)
           VALUES (?, ?, ?, ?, ?)
        ''', (name, description, price, data, photo_id))
    conn.commit()


def change_faq(about: str):
    """–ò–∑–º–µ–Ω–µ–Ω–∏–µ FAQ"""
    conn = get_connection()
    c = conn.cursor()
    c.execute(
        '''
            SELECT * FROM faq
        '''
    )
    while True:
        row = c.fetchone()
        if row == None:
            break
        c.execute(
            '''
                UPDATE faq SET about = ? WHERE about = ?
            ''', (about, row[0])
        )
    conn.commit()


def remove_all_products_db():
    """–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –ë–î"""
    conn = get_connection()
    c = conn.cursor()
    all_items = c.execute(
        '''
        SELECT * FROM items
        '''
    ).fetchall()

    count = 0
    for row in all_items:
        c.execute(
            '''
                DELETE FROM items WHERE id = ?
            ''', (row[0],)
        )
        conn.commit()
        count += 1


def get_faq():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ faq –∏–∑ –ë–î"""
    conn = get_connection()
    c = conn.cursor()
    c.execute(
        '''
        SELECT * FROM faq
        '''
    )
    row = c.fetchall()
    for i in row:
        return i[0]
